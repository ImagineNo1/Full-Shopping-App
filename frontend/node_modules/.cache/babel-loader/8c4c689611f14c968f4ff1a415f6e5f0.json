{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\Documents\\\\customersell\\\\frontend\\\\src\\\\context\\\\userContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const userContext = /*#__PURE__*/createContext();\nexport const userReducer = () => {};\nexport const userContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(userReducer, {\n    user: null\n  });\n  return /*#__PURE__*/_jsxDEV(userContext.Provider, {\n    value: { ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(userContextProvider, \"o8zS1100szX9/7eMypGHICJfD2o=\");","map":{"version":3,"names":["createContext","useReducer","userContext","userReducer","userContextProvider","children","state","dispatch","user"],"sources":["C:/Users/moham/Documents/customersell/frontend/src/context/userContext.js"],"sourcesContent":["import { createContext , useReducer } from \"react\";\r\n\r\nexport const userContext = createContext()\r\n\r\nexport const userReducer = () => {\r\n\r\n}\r\n\r\nexport const userContextProvider = ({children}) => {\r\n    const [state,dispatch] = useReducer(userReducer,{\r\n        user : null\r\n    })\r\n\r\n    return ( \r\n        <userContext.Provider value={{...state,dispatch}}>\r\n            {children}\r\n        </userContext.Provider>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,aAAT,EAAyBC,UAAzB,QAA2C,OAA3C;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AAEP,OAAO,MAAMG,WAAW,GAAG,MAAM,CAEhC,CAFM;AAIP,OAAO,MAAMC,mBAAmB,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAC/C,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,UAAU,CAACE,WAAD,EAAa;IAC5CK,IAAI,EAAG;EADqC,CAAb,CAAnC;EAIA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE,EAAC,GAAGF,KAAJ;MAAUC;IAAV,CAA7B;IAAA,UACKF;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAVM;;GAAMD,mB"},"metadata":{},"sourceType":"module"}